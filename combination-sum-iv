class Solution {
private:
    int n;
    vector<int> dp;
    
    int possibleComb(vector<int>& nums, int target) {
        if(target==0) {
            return 1;
        } else if(target < 0) {
            return 0;
        }
        
        if(dp[target] != -1) {
            return dp[target];
        }
        
        int combinations = 0;
        for(int i=0;i<nums.size();++i) {
            combinations += possibleComb(nums, target-nums[i]);
        }
        return dp[target] = combinations;
    }
public:
    int combinationSum4(vector<int>& nums, int target) {
        n = nums.size();
        dp.resize(target+1, -1);
        
        return possibleComb(nums, target);
    }
};
