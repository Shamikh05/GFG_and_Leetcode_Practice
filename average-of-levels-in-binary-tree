/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> ans;
        
        queue<TreeNode*> levelOrder;
        levelOrder.push(root);
        levelOrder.push(NULL);
        
        int nodes = 0;
        double sum = 0;
        while(!levelOrder.empty()) {
            TreeNode* currNode = levelOrder.front();
            levelOrder.pop();
            
            if(currNode != NULL) {
                ++nodes;
                sum += currNode->val;
                if(currNode->left) levelOrder.push(currNode->left);
                if(currNode->right) levelOrder.push(currNode->right);   
            }
            else {
                double avg = sum / (double)(nodes);
                ans.push_back(avg);
                sum = 0;
                nodes = 0;
                
                if(!levelOrder.empty()) {
                    levelOrder.push(NULL);
                }
            }
        }
        return ans;
    }
};
