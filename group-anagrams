class Solution {
private:
    string countSort(string &str) {
        vector<int> charFreq(26, 0);
        for(char ch : str) {
            ++charFreq[ch - 'a'];
        }
        
        string sortedStr = "";
        for(int i = 0; i < 26; ++i) {
            int currFreq = charFreq[i];
            char currChar = char('a' + i);
            
            while(currFreq > 0) {
                sortedStr.push_back(currChar);
                --currFreq;
            }
        }
        
        return sortedStr;
    }
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {        
        unordered_map<string, vector<string> > mp;
        for(string str : strs) {
            string sortedStr = countSort(str);
            mp[sortedStr].push_back(str);
        }
        
        vector<vector<string> > ans;
        for(auto it : mp) {
            ans.push_back(it.second);
        }
        
        return ans;
    }
};
