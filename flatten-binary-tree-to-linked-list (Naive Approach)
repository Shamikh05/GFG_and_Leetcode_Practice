/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:    
    void makeLL(TreeNode *root, vector<TreeNode*> &nodes, int idx) {
        
        if(!root or idx == nodes.size()) 
            return;
        
        root->left = NULL;
        root->right = nodes[idx];
        
        makeLL(root->right, nodes, idx+1);
    }
    void preOrder(TreeNode *root, vector<TreeNode*> &nodes) {
        
        if(root==NULL) return;
        
        nodes.push_back(root);
        
        preOrder(root->left, nodes);
        preOrder(root->right, nodes);
    }
public:
    void flatten(TreeNode* root) {
        
        vector<TreeNode*> nodes;
        
        preOrder(root, nodes);
                
        makeLL(root, nodes, 1);
    }
};
