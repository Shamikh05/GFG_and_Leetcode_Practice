class Solution {
    bool check_cycle(int node, vector<int> adj[], vector<int> &vis, vector<int> &dfsVis) {
        
        vis[node] = 1;
        dfsVis[node] = 1;
        
        for(auto it : adj[node]) {
            
            if(!vis[it]) {
                if(check_cycle(it,adj,vis,dfsVis))
                    return true;
            }
            else if(dfsVis[it]) {
                return true;
            }
        }
        
        dfsVis[node] = 0;
        
        return false;
    }
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        
        int n = prerequisites.size();
        
        vector<int> adj[numCourses];
        
        for(int i=0;i<n;++i) {
            adj[prerequisites[i][0]].push_back(prerequisites[i][1]);
        }
        
        vector<int> vis(5001,0);
        vector<int> dfsVis(5001,0);
        
        for(int i=0;i<numCourses;++i) {
            
            if(!vis[i]) { 
                if(check_cycle(i,adj,vis,dfsVis))
                    return false;
            }
        }
        
        return true;
    }
};
