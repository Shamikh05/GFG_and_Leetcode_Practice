class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        
        int n = heights.size();
        
        vector<int> left(n,0);
        left[0] = 0;
        
        
        stack<int> st;
        st.push(0);
        
        
        for(int i=1;i<n;++i) {
            
            while(!st.empty() and heights[st.top()] >= heights[i]) {
                st.pop();
            }
            
            if(st.empty())
                left[i] = 0;
            else
                left[i] = st.top() + 1;
            
            st.push(i);
        }
        
        
        vector<int> right(n,0);
        right[n-1] = n-1;
        
        
        stack<int> st2;
        st2.push(n-1);
        
        
        for(int i=n-2;i>=0;i--) {
            
            while(!st2.empty() and heights[st2.top()] >= heights[i]) {
                st2.pop();
            }
            
            if(st2.empty())
                right[i] = n-1;
            else
                right[i] = st2.top() - 1;
            
            st2.push(i);
        }
        
        int ans = 0;
        
        for(int i=0;i<n;++i) {
            int area = (right[i] - left[i] + 1) * heights[i];
            ans = max(ans,area);
        }
        
        return ans;
        
    }
};
