/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    ListNode* mergeLists(ListNode* l1, ListNode* l2) {
        
        if(l1==NULL)
            return l2;
        
        if(l2==NULL)
            return l1;
        
        if(l1->val <= l2->val) {
            l1->next = mergeLists(l1->next,l2);
            return l1;
        } 
        else {
            l2->next = mergeLists(l1,l2->next);
            return l2;
        }
        
    }
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        
        int n = lists.size();
        
        if(n==0)
            return NULL;
        
        if(n==1)
            return lists[0];
            
        ListNode *head = lists[0];
        
        for(int i=1;i<n;++i) {
            
            head = mergeLists(head, lists[i]);
        }
        
        return head;
        
    }
};
