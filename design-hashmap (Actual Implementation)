class MyHashMap {
private:
    int size = 10000;
    vector<vector<pair<int, int>>> map;
public:
    MyHashMap() {
        map.resize(size);
    }
    
    void put(int key, int value) {
        
        int hashIdx = key % size;
        
        auto &row = map[hashIdx];
        
        for(auto &it : row) {
            
            if(it.first==key) {
                it.second = value;
                return;
            }
        }
        
        row.push_back({key,value});
    }
    
    int get(int key) {
        
        int hashIdx = key % size;
        
        auto &row = map[hashIdx];
        
        for(auto &it : row) {
            
            if(it.first==key) 
                return it.second;
        }
        
        return -1;
    }
    
    void remove(int key) {
        
        int hashIdx = key % size;
        
        auto &row = map[hashIdx];
        
        for(auto &it : row) {
            
            if(it.first==key) 
                it.second = -1;
        }
    }
};

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap* obj = new MyHashMap();
 * obj->put(key,value);
 * int param_2 = obj->get(key);
 * obj->remove(key);
 */
