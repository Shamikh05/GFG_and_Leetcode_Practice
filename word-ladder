class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        
        unordered_set<string> s(wordList.begin(), wordList.end());
        
        if(s.find(endWord)==s.end())
            return 0;
        
        
        queue<string> q;
        
        q.push(beginWord);
        
        int ans = 1;
        
        while(!q.empty()) {
            
            int n = q.size();
            
            for(int i=0;i<n;++i) {
                
                string str = q.front();
                q.pop();
                
                if(str==endWord)
                    return ans;
                
                s.erase(str);
                
                for(int j=0;j<str.size();j++) {
                    
                    char ch = str[j];
                    
                    for(int k=0;k<26;k++) {
                        
                        str[j] = 'a' + k;
                        
                        if(s.find(str) != s.end())
                            q.push(str);
                    }
                    
                    str[j] = ch;
                }
            }
            
            ans++;
        }
        
        return 0;
    }
};
