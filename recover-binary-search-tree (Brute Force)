/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
    int k = 0;
    
    void compare(TreeNode* root, vector<int> &v) {
        
        if(root==NULL)
            return;
        
        compare(root->left,v);
        
        root->val = v[k++];
        
        compare(root->right,v);
    }
    void fillUp(TreeNode* root, vector<int> &v) {
        
        if(root==NULL)
            return;
        
        fillUp(root->left,v);
        
        v.push_back(root->val);
        
        fillUp(root->right,v);
    }
public:
    void recoverTree(TreeNode* root) {
        
        vector<int> v;
        
        fillUp(root,v);
        
        sort(v.begin(),v.end());
        
        compare(root,v);
        
    }
};
