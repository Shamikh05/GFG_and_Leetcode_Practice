/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        
        if(head->next == NULL and n==1)
            return head = NULL;
        
        
        ListNode* ptr1 = head;
        
        int numOfNodes = 0;
        
        while(ptr1) {
            
            numOfNodes++;
            
            ptr1 = ptr1->next;
        }
        
        if(n==numOfNodes) {
            head = head->next;
            return head;
        }
        
        ptr1 = head;
        
        n = numOfNodes - n;
        
        int k = 1;
        
        while(n > 1) {
            
            ptr1 = ptr1->next;
            
            n--;
        }
        
        if(ptr1->next->next==NULL) {
            ptr1->next = NULL;
            return head;
        }
        
        ListNode* ptr2 = ptr1->next;
        
        ptr1->next = ptr2->next;
        
        delete ptr2;
        
        return head;
    }
};
