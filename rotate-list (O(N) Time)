/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        
        if(k==0 or head==NULL or head->next==NULL) 
            return head;
        
        ListNode *p1, *p2, *p3;
        
        int n = 0;
        p3 = head;
        
        while(p3->next != NULL) {
            n++;
            p3 = p3->next;
        }
        
        n++;
        
        k %= n;
        
        if(k==0) 
            return head;
        
        k = n - k;
        
        int i = 1;
        p1 = head;
        
        while(i<k) {
            
            p1 = p1->next;
            
            i++;
        }
        
        p2 = p1->next;
        
        p3->next = head;
        head = p2;
        p1->next = NULL;
        
        return head;
        
    }
};
