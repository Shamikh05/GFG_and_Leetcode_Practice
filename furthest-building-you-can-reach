class Solution {
public:
    int furthestBuilding(vector<int>& heights, int bricks, int ladders) {
        
        long long int n = heights.size();
        
        priority_queue<long long int> maxBricks;
        
        long long int maxIdx = 0;
        
        long long int currBricks = 0; 
        
        for(int i=1;i<n;++i) {
            
            long long int heightDiff = heights[i] - heights[i-1];
            
            if(heightDiff > 0) {
                
                currBricks += heightDiff;
                maxBricks.push(heightDiff);
                
                while(currBricks > bricks and ladders) {
                    
                    currBricks -= maxBricks.top();
                    
                    maxBricks.pop();
                    --ladders;
                }
            }
            
            
            if(currBricks <= bricks) {    
                maxIdx = i;
            }
        }
        
        return maxIdx;  
    }
};
