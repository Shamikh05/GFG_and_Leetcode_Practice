class Solution {
public:
    vector<string> wordSubsets(vector<string>& words1, vector<string>& words2) {
        
        vector<string> ans;
        
        vector<int> w2Freq(26, 0);
        
        for(string w2 : words2) {
            vector<int> currFreq(26, 0);
            
            for(char ch : w2) {
                ++currFreq[ch - 'a'];
            }
            
            for(int i=0;i<26;++i) {
                w2Freq[i] = max(w2Freq[i], currFreq[i]);
            }
        }
        
        for(string w1 : words1) {
            bool isUniv = true;
            
            vector<int> w1Freq(26, 0);
            
            for(char ch : w1) 
                ++w1Freq[ch - 'a'];
            
            for(int i=0;i<26;++i) {
                if(w1Freq[i] < w2Freq[i]) {
                    isUniv = false;
                    break;
                }
            }
            
            if(isUniv) 
                ans.push_back(w1);
        }
        
        return ans;
    }
};
