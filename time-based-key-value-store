class TimeMap {
private:
    unordered_map<string, vector<pair<int, string> > > mp;
public:
    TimeMap() {
        
    }
    
    void set(string key, string value, int timestamp) {
        mp[key].push_back(make_pair(timestamp, value));
    }
    
    string get(string key, int timestamp) {
        for(auto it=mp[key].rbegin(); it != mp[key].rend(); ++it) {
            int currTs = it->first;
            string currVal = it->second;
            
            if(currTs <= timestamp) {
                return currVal;
            }
        }
        return "";
    }
};

/**
 * Your TimeMap object will be instantiated and called as such:
 * TimeMap* obj = new TimeMap();
 * obj->set(key,value,timestamp);
 * string param_2 = obj->get(key,timestamp);
 */
