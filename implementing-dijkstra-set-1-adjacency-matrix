vector <int> dijkstra(int V, vector<vector<int>> adj[], int S) {
        // Code here
        
        vector<int> dist(V,INT_MAX);
        
        dist[S] = 0;
        
        priority_queue<pair<int, int>, vector<pair<int, int> >, greater<pair<int, int>> > pq;
        
        pq.push({0,S});
        
        while(!pq.empty()) {
            
            int distance = pq.top().first;
            int node = pq.top().second;
            
            pq.pop();
            
            for(auto it : adj[node]) {
                
                int adjNode = it[0];
                int adjDist = it[1];

                int newDist = dist[node] + adjDist;

                if(newDist < dist[adjNode]) {
                    pq.push({adjDist,adjNode});
                    dist[adjNode] = newDist;
                }
            }
            
        }
        
        return dist;
}
