/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
    int xParent, yParent, xDepth, yDepth;
    
    void find_depth(TreeNode* root, int d, int x, int y, int p) {
        
        if(root==NULL)
            return;
        
        if(root->val == x) {
            xDepth = d;
            xParent = p;
        }
        
        if(root->val == y) {
            yDepth = d;
            yParent = p;
        }
        
        p = root->val;
        
        find_depth(root->left, d+1, x, y, p);
        find_depth(root->right, d+1, x, y, p);
        
    }
public:
    bool isCousins(TreeNode* root, int x, int y) {
        
        find_depth(root, 0, x, y, root->val);
        
        if(xDepth==yDepth and xParent!=yParent)
            return true;
        
        return false;
        
    }
};
