/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void preOrder(TreeNode* root, int targetSum, vector<int> &temp, vector<vector<int> > &ans) {
        
        if(root==NULL) 
            return;
        
        temp.push_back(root->val);
        
        if(root->left==NULL and root->right==NULL) {
            
            if(targetSum==root->val) {
                ans.push_back(temp);
            }
        }
        
        preOrder(root->left, targetSum - root->val, temp, ans);
        preOrder(root->right, targetSum - root->val, temp, ans);
        
        temp.pop_back();
        
    }
public:
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        
        vector<int> temp;
        vector<vector<int> > ans;
        
        preOrder(root, targetSum, temp, ans);
        
        return ans;
    }
};
