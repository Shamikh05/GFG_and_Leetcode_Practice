/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void preorderTrav(TreeNode* root, int currDep, int val, int depth) {
        if(root==NULL) {
            return;
        }
        
        if(currDep == (depth - 1)) {
            TreeNode *newLeftNode = new TreeNode(val, root->left, NULL);
            TreeNode *newRightNode = new TreeNode(val, NULL, root->right);
            root->left = newLeftNode;
            root->right = newRightNode;
        }
        
        preorderTrav(root->left, currDep+1, val, depth);
        preorderTrav(root->right, currDep+1, val, depth);
    }
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth == 1) {
            TreeNode *newRoot = new TreeNode(val, root, NULL);
            return newRoot;
        }
        
        preorderTrav(root, 1, val, depth);
        return root;
    }
};
