class Solution {
public:
    int rob(vector<int>& nums) {
        
        int n = nums.size();
        
        if(n==1)
            return nums[0];
        
        if(n==2)
            return max(nums[0],nums[1]);
        
        vector<int> dp(n,-1);
        
        dp[0] = nums[0];
        dp[1] = max(nums[0],nums[1]);
        
        for(int i=2;i<n-1;++i) {
            
            int op1 = dp[i-2] + nums[i];
            int op2 = dp[i-1];
            
            dp[i] = max(op1, op2);
        }
        
        int incFirstHouse = dp[n-2];
        
        dp.clear();
        
        dp[0] = 0;
        dp[1] = nums[1];
        dp[2] = max(nums[1],nums[2]);
        
        for(int i=3;i<n;++i) {
            
            int op1 = dp[i-2] + nums[i];
            int op2 = dp[i-1];
            
            dp[i] = max(op1, op2);
        }
        
        int incSecondHouse = dp[n-1];
        
        return max(incFirstHouse, incSecondHouse);
    }
};
